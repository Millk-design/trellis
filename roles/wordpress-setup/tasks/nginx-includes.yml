---
- name: Build list of Nginx includes templates
  find:
    paths:
      - "{{ nginx_includes_templates_path }}"
      - roles/wordpress-setup/templates/includes.d
    pattern: "*.conf.j2"
    recurse: yes
  become: no
  connection: local
  register: nginx_includes_templates

- name: Warn about deprecated Nginx includes directory
  debug:
    msg: "[DEPRECATION WARNING]: The `roles/wordpress-setup/templates/includes.d` directory for Trellis Nginx includes templates is deprecated and will no longer function beginning with Trellis 1.0. Please move these templates to a directory named `{{ nginx_includes_templates_path }}` in the root of this project. For more information, see https://roots.io/trellis/docs/nginx-includes/"
  when: True in nginx_includes_templates.files | map(attribute='path') | map('search', 'roles/wordpress-setup/templates/includes.d') | list

- name: Create includes.d directories
  file:
    path: "{{ nginx_path }}/includes.d/{{ item }}"
    state: directory
    mode: 0755
  with_items: "{{ nginx_includes_templates.files | map(attribute='path') |
                  map('regex_replace', '^(' + nginx_includes_templates_path + '|.*includes\\.d)\\/(.*)$', '\\2') |
                  map('dirname') | unique | select | list | sort
               }}"
  register: nginx_includes_paths

- name: Template files out to includes.d
  template:
    src: "{{ item }}"
    dest: "{{ nginx_path }}/includes.d/{{ item | regex_replace('^(' + nginx_includes_templates_path + '|.*includes\\.d)\\/(.*)\\.j2$', '\\2') }}"
  with_items: "{{ nginx_includes_templates.files | map(attribute='path') | list | sort(True) }}"
  register: nginx_includes_managed
  notify: reload nginx

- name: Retrieve list of existing files in includes.d
  shell: "find {{ nginx_includes_paths.results | map(attribute='path') | join(' ') }} -type f -name \\*.conf 2>/dev/null || :"
  register: nginx_includes_existing
  changed_when: false

- name: Remove unmanaged files from includes.d
  file:
    path: "{{ item }}"
    state: absent
  with_items: "{{ nginx_includes_existing.stdout_lines |
                  difference(nginx_includes_managed.results | default([]) | map(attribute='item') |
                    map('regex_replace', '(.*)\\.j2', '/etc/nginx/includes.d/\\1') | list
                  )
               }}"
  notify: reload nginx
