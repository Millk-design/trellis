---
- name: Determine Remote User
  hosts: "{{ xdebug_tunnel_ssh_host }}"
  gather_facts: false
  roles:
    - { role: remote-user, tags: [remote-user, always] }
  post_tasks:
    - name: Gather Facts
      setup:

- name: Manage XDebug SSH Tunnel
  hosts: localhost
  vars:
    xdebug_tunnel_close: false
    xdebug_tunnel_remote_port: 9000
    xdebug_tunnel_host: localhost
    xdebug_tunnel_local_port: 9000
    xdebug_tunnel_control_socket: "/tmp/trellis-xdebug-{{ xdebug_tunnel_ssh_host }}"
    xdebug_tunnel_control_identity: "{{ ansible_user_id }}"
  tasks:
    - name: Create XDebug SSH Tunnel
      command: "ssh -M -S '{{ xdebug_tunnel_control_socket }}' -fnNT -L {{ xdebug_tunnel_remote_port }}:{{ xdebug_tunnel_host }}:{{ xdebug_tunnel_local_port }} {{ hostvars[xdebug_tunnel_ssh_host]['ansible_user'] | default(admin_user) }}@{{ hostvars[xdebug_tunnel_ssh_host]['ansible_host'] }} '{{ xdebug_tunnel_control_identity }}'"
      when: xdebug_tunnel_close == false
      register: xdebug_tunnel_creation
      ignore_errors: true

    - name: Close XDebug SSH Tunnel
      command: "ssh -S '{{ xdebug_tunnel_control_socket }}' -O exit '{{ xdebug_tunnel_control_identity }}'"
      when: xdebug_tunnel_close
      register: xdebug_tunnel_closing
      ignore_errors: true

    - name: Fail the play if tunnel already exists
      fail: msg="SSH tunnel already exists! Refer to TODO for help. Error:\n{{ xdebug_tunnel_creation.stderr | default('') }}"
      when: "'bind: Address already in use' in xdebug_tunnel_creation.stderr | default('')"

    - name: Fail the play if tunnel was already closed
      fail: msg="SSH tunnel already closed!"
      when: "'No such file or directory' in xdebug_tunnel_closing.stderr | default('')"

    - name: Announce tunnel was created
      debug:
        msg: "SSH Tunnel {{ xdebug_tunnel_closing.failed | default(false) | ternary('was not', 'was') }} created!"
      when: xdebug_tunnel_creation is defined and xdebug_tunnel_creation.changed

    - name: Announce tunnel was closed
      debug:
        msg: "SSH Tunnel {{ xdebug_tunnel_closing.failed | default(false) | ternary('was not', 'was') }} closed!"
      when: xdebug_tunnel_closing is defined and xdebug_tunnel_closing.changed
